{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store/index.js","components/layout/Landing.js","components/layout/Navbar.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Landing","style","height","className","src","alt","margin","to","width","borderRadius","letterSpacing","Component","Navbar","marginTop","fontFamily","fontWeight","fontSize","color","Register","name","email","password","password2","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","props","registerUser","history","this","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Dashboard","onLogoutClick","split","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.15e6aa44.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n// Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <img src=\"https://img.icons8.com/cotton/64/000000/user-male--v1.png\" alt=\"user-icon\"/>\r\n            <h6 style={{margin: '3rem 0'}} className=\"flow-text text-darken-1\">\r\n              Authentication via passport and JWTs\r\n            </h6>\r\n            <br />\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/register\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\"\r\n                }}\r\n                className=\"btn btn-large waves-effect waves-light blue accent-3\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/login\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\"\r\n                }}\r\n                className=\"btn btn-large waves-effect waves-dark white black-text\"\r\n              >\r\n                Log In\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{marginTop: '2rem'}} className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                fontFamily: 'Arial',\r\n                fontWeight: 'bold'\r\n              }}\r\n              className=\"col s5 brand-logo center black-text\"\r\n            >\r\n              <i style={{fontSize: '3rem', color: '#db09a0'}} className=\"material-icons\">code</i>\r\n              <span style={{color: '#424242'}}>MERN_AUTH</span>\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  \r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n    };\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  render() {\r\n\r\n    const { errors } = this.state;\r\n    return (\r\n      <div style={{marginTop: '7rem'}} className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Register</b>\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Already have an account? <Link to=\"/login\">Log in</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.name}\r\n                  error={errors.name}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.name\r\n                  })}\r\n                />\r\n                <label htmlFor=\"name\">Name</label>\r\n                <span className=\"red-text\">{errors.name}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">{errors.email}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">{errors.password}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password2\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password2\">Confirm Password</label>\r\n                <span className=\"red-text\">{errors.password2}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\",\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light blue accent-3\"\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect( mapStateToProps, { registerUser })(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n    \r\n  };\r\n  \r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div style={{marginTop: '7rem'}} className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Login</b>\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light blue accent-3\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect( mapStateToProps, { loginUser } )(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nclass Dashboard extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n\r\n        const { user } = this.props.auth;\r\n        \r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                <div className=\"col s12 center-align\">\r\n                    <h4>\r\n                    <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n                    <p className=\"flow-text grey-text text-darken-1\">\r\n                        You are logged into a full-stack{\" \"}\r\n                        <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\r\n                    </p>\r\n                    </h4>\r\n                    <button\r\n                    style={{\r\n                        width: \"150px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                    }}\r\n                    onClick={this.onLogoutClick}\r\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                    >\r\n                    Logout\r\n                    </button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps,{ logoutUser })(Dashboard);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Landing from './components/layout/Landing';\nimport Navbar from './components/layout/Navbar';\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}